public class Solver {

    public static void main(String[] args) {

		/*solve(new int[][]{
				{0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 0, 0, 0}
		});*/

        solve(new int[][]{
                {0, 0, 8, 3, 0, 0, 7, 0, 9},
                {2, 0, 6, 0, 4, 9, 1, 0, 8},
                {0, 0, 0, 0, 8, 6, 0, 3, 0},
                {7, 0, 0, 0, 1, 0, 3, 0, 0},
                {3, 9, 0, 0, 0, 0, 0, 8, 1},
                {0, 0, 2, 0, 3, 0, 0, 0, 4},
                {0, 7, 0, 1, 5, 0, 0, 0, 0},
                {6, 0, 1, 8, 9, 0, 5, 0, 3},
                {4, 0, 9, 0, 0, 3, 8, 0, 0}
        });

        solve(new int[][]{
                {0, 0, 1, 2, 0, 7, 5, 0, 0},
                {6, 0, 0, 1, 0, 5, 0, 0, 0},
                {5, 4, 0, 0, 0, 0, 7, 9, 0},
                {8, 9, 0, 0, 5, 0, 0, 0, 0},
                {0, 0, 0, 3, 6, 9, 0, 0, 0},
                {0, 0, 0, 0, 1, 0, 0, 5, 9},
                {0, 6, 4, 0, 0, 0, 0, 2, 5},
                {0, 0, 0, 5, 0, 6, 0, 0, 7},
                {0, 0, 3, 4, 0, 8, 9, 0, 0}
        });

        solve(new int[][]{
                {1, 0, 4, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 4, 8, 0, 1, 0, 7},
                {0, 0, 0, 0, 1, 3, 0, 6, 5},
                {8, 0, 0, 0, 9, 0, 0, 3, 0},
                {0, 0, 2, 0, 3, 0, 9, 0, 0},
                {0, 4, 0, 0, 2, 0, 0, 0, 1},
                {7, 5, 0, 9, 6, 0, 0, 0, 0},
                {9, 0, 1, 0, 4, 2, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 8, 0, 9}
        });

        solve(new int[][]{
                {0, 0, 0, 0, 2, 0, 0, 0, 6},
                {0, 0, 0, 0, 0, 7, 0, 8, 2},
                {0, 0, 4, 1, 0, 0, 0, 0, 3},
                {0, 0, 0, 5, 0, 0, 2, 4, 7},
                {0, 0, 5, 0, 0, 0, 9, 0, 0},
                {4, 8, 7, 0, 0, 1, 0, 0, 0},
                {8, 0, 0, 0, 0, 2, 3, 0, 0},
                {7, 6, 0, 3, 0, 0, 0, 0, 0},
                {9, 0, 0, 0, 1, 0, 0, 0, 0}
        });

        solve(new int[][]{
                {2, 0, 0, 0, 0, 0, 0, 0, 1},
                {0, 4, 0, 6, 0, 0, 0, 5, 0},
                {0, 5, 0, 0, 0, 0, 3, 0, 0},
                {0, 0, 0, 8, 3, 0, 0, 9, 5},
                {0, 0, 8, 4, 0, 7, 6, 0, 0},
                {5, 3, 0, 0, 9, 1, 0, 0, 0},
                {0, 0, 4, 0, 0, 0, 0, 2, 0},
                {0, 1, 0, 0, 0, 9, 0, 8, 0},
                {7, 0, 0, 0, 0, 0, 0, 0, 3}
        });

        solve(new int[][]{
                {5, 0, 9, 0, 0, 8, 0, 0, 3},
                {0, 0, 4, 0, 0, 0, 8, 9, 0},
                {0, 0, 0, 4, 0, 0, 0, 0, 0},
                {0, 0, 0, 0, 5, 0, 0, 6, 7},
                {9, 0, 0, 8, 0, 4, 0, 0, 1},
                {7, 5, 0, 0, 6, 0, 0, 0, 0},
                {0, 0, 0, 0, 0, 2, 0, 0, 0},
                {0, 8, 5, 0, 0, 0, 3, 0, 0},
                {2, 0, 0, 1, 0, 0, 5, 0, 6}
        });

        solve(new int[][]{
                {0, 0, 0, 7, 0, 0, 0, 0, 0},
                {1, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 0, 4, 3, 0, 2, 0, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 6},
                {0, 0, 0, 5, 0, 9, 0, 0, 0},
                {0, 0, 0, 0, 0, 0, 4, 1, 8},
                {0, 0, 0, 0, 8, 1, 0, 0, 0},
                {0, 0, 2, 0, 0, 0, 0, 5, 0},
                {0, 4, 0, 0, 0, 0, 3, 0, 0}
        });

        solve(new int[][]{
                {8, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, 0, 3, 6, 0, 0, 0, 0, 0},
                {0, 7, 0, 0, 9, 0, 2, 0, 0},
                {0, 5, 0, 0, 0, 7, 0, 0, 0},
                {0, 0, 0, 0, 4, 5, 7, 0, 0},
                {0, 0, 0, 1, 0, 0, 0, 3, 0},
                {0, 0, 1, 0, 0, 0, 0, 6, 8},
                {0, 0, 8, 5, 0, 0, 0, 1, 0},
                {0, 9, 0, 0, 0, 0, 4, 0, 0}
        });

    }

    public static void solve(int[][] grid) {
        Puzzle puzzle = new Puzzle(grid);
        System.out.println("Puzzle: ");
        puzzle.display();
        System.out.println();
        try {
            puzzle.solve();
            System.out.println("Solution: ");
            puzzle.display();
            puzzle.displayPencil();

        } catch (InvalidPuzzleException exception) {
            System.out.println("Invalid puzzle: no solution.");
        }
        System.out.println();
    }

}